1
a) Não é possível instanciar diretamente (`new Pessoa()`) porque é abstrata, ou seja, serve apenas de modelo para outras classes.
b) O método `final` impede que ele seja sobrescrito nas classes filhas.
c) O método abstrato obriga as subclasses a implementarem sua própria versão do método.


2
a) `Visitante` é uma classe concreta (pode ser instanciada).
b) A herança é pobre, pois apenas reutiliza os métodos e atributos da classe base sem adicionar novos comportamentos.


3
a) O `parent::__construct()` chama o construtor da classe mãe para aproveitar a inicialização comum.
b) O método `fazerAniversario()` não pode ser sobrescrito porque foi declarado como `final`.


4
a) O método `pagarMensalidade()` mostra polimorfismo, pois tem comportamento diferente do mesmo método em `Aluno`.
b) `fazerAniversario()` não pode ser sobrescrito por ser `final`.


5
a) `Professor` é `final`, então não pode ter subclasses (ex: `Coordenador extends Professor` gerará erro).
b) A raiz da hierarquia é `Pessoa`, e as folhas são `Visitante`, `Aluno`, `Bolsista` e `Professor`.
